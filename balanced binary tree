/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
 // whenever there's one side don't balance, recusively return -1
 
 // time O(N), space O(logN)
 
public class Solution {
    
    
    public boolean isBalanced(TreeNode root){
    	if(root==null){
    	    return true;
    	}
    	
    	if(getDepthRec(root)>=0){
    		return true;
    	}else{
    		return false;
    	}
    	
    }
    
    public int getDepthRec (TreeNode root){
    	
       if(root == null){
    	   return 0;
       }
       
       int l = getDepthRec(root.left);
       int r = getDepthRec(root.right);
       
       if(l==-1||r==-1){
    	   return -1;
       }
       
       if (Math.abs((l-r))>1){
    	   return -1;
       }
       
       return 1+Math.max(l, r);
    	
    }
}
